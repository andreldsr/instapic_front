{"version":3,"sources":["webpack:///src/app/core/auth/auth.service.ts","webpack:///src/app/core/auth/login.guard.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/home.module.ts","webpack:///src/app/home/home.routing.module.ts","webpack:///src/app/home/login/login.component.ts","webpack:///src/app/home/login/login.component.html","webpack:///src/app/home/signup/signup.component.ts","webpack:///src/app/home/signup/signup.component.html","webpack:///src/app/shared/validators/lower-case-validator/lower-case.validator.ts"],"names":["API_URL","apiUrl","AuthService","http","userService","userName","password","post","observe","pipe","res","authToken","headers","get","setToken","providedIn","LoginGuard","router","route","state","isLogged","navigate","getUsername","HomeComponent","selector","templateUrl","styleUrls","HomeModule","declarations","imports","routes","path","component","canActivate","children","data","title","HomeRoutingModule","forChild","exports","LoginComponent","formBuilder","authService","platformDetectorService","erro","loginForm","group","required","isPlatformBrowser","loginFormInput","nativeElement","focus","value","authenticate","subscribe","err","console","log","reset","login","SignupComponent","error","signUpForm","email","minLength","maxLength","fullName","emailFormInput","userForm","getRawValue","signUp","_","message","lowerCaseValidator","control","trim","test","lowerCase"],"mappings":"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","file":"home-home-module-es5.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { tap } from 'rxjs/operators';\nimport { UserService } from '../user/user.service';\nimport { environment } from './../../../environments/environment';\n\nconst API_URL = environment.apiUrl;\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient, private userService: UserService) { }\n\n  authenticate(userName: string, password: string) {\n    return this.http.post(`${API_URL}/user/login`, {\n      userName,\n      password\n    }, { observe: 'response' })\n      .pipe(tap(\n        res => {\n          const authToken = res.headers.get('x-access-token');\n          this.userService.setToken(authToken);\n        }\n      ));\n  }\n}\n","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UserService } from '../user/user.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LoginGuard implements CanActivate {\r\n\r\n    constructor(private userService: UserService, private router: Router) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n        if (this.userService.isLogged()) {\r\n            this.router.navigate(['user', this.userService.getUsername()])\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-6 col-md-6\">\n            <img class=\"img-fluid d-none d-sm-block\" src=\"assets/img/home.jpg\" />\n        </div>\n        <div class=\"col-6 col-md-6\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>","import { HomeRoutingModule } from './home.routing.module';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { VmessageModule } from './../shared/components/vmessage/vmessage.module';\nimport { FormErrorModule } from './../shared/components/form-error/form-error.module';\nimport { HomeComponent } from './home.component';\n\n\n\n@NgModule({\n  declarations: [LoginComponent, SignupComponent, HomeComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    VmessageModule,\n    RouterModule,\n    FormErrorModule,\n    HomeRoutingModule\n  ]\n})\nexport class HomeModule { }\n","import { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HomeComponent } from './home.component';\r\nimport { LoginGuard } from './../core/auth/login.guard';\r\n\r\nimport { Routes } from '@angular/router';\r\n\r\nexport const routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: HomeComponent,\r\n        canActivate: [LoginGuard],\r\n        children: [\r\n            {\r\n                path: '', component: LoginComponent,\r\n                data: {\r\n                    title: 'Sign in'\r\n                }\r\n            },\r\n            {\r\n                path: 'signup', component: SignupComponent,\r\n                data: {\r\n                    title: 'Sign up'\r\n                }\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class HomeRoutingModule { }\r\n","import { Component, OnInit, ElementRef, ViewChild, AfterViewInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { PlatformDetectorService } from './../../core/platform-detector/platform-detector.service';\nimport { AuthService } from './../../core/auth/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, AfterViewInit {\n\n  loginForm: FormGroup;\n  erro = '';\n  @ViewChild('loginFormInput') loginFormInput: ElementRef<HTMLInputElement>;\n\n  constructor(private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private platformDetectorService: PlatformDetectorService) { }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      userName: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  ngAfterViewInit(): void {\n    this.platformDetectorService.isPlatformBrowser() &&\n      this.loginFormInput.nativeElement.focus();\n  }\n\n  login() {\n    const userName = this.loginForm.get('userName').value;\n    const password = this.loginForm.get('password').value;\n    this.authService\n      .authenticate(userName, password)\n      .subscribe(() => {\n        this.router.navigate(['user', userName]);\n      },\n        err => {\n          console.log(err);\n          this.erro = 'Usuário ou senha inválido';\n          this.platformDetectorService.isPlatformBrowser() &&\n            this.loginFormInput.nativeElement.focus();\n          this.loginForm.reset();\n        });\n  }\n\n}\n","<div class=\"container pt-5\">\n    <ol-vmessage *ngIf=\"erro.length\" [message]=\"erro\">\n    </ol-vmessage>\n    <form class=\"form\" [formGroup]=\"loginForm\" (submit)=\"login()\">\n        <div class=\"form-group\">\n            <label for=\"userName\">Username</label>\n            <input #loginFormInput id=\"userName\" formControlName=\"userName\" class=\"form-control\"\n                placeholder=\"User name\" />\n            <ol-form-error [input]=\"loginForm.get('userName')\" inputName=\"User name\">\n            </ol-form-error>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input id=\"password\" type=\"password\" formControlName=\"password\" class=\"form-control\"\n                placeholder=\"Password\" />\n            <ol-form-error [input]=\"loginForm.get('password')\" inputName=\"Password\">\n            </ol-form-error>\n        </div>\n        <button type=\"submit\" [disabled]=\"loginForm.invalid\" class=\"btn btn-primary btn-block\">Login</button>\n        <a [routerLink]=\"['signup']\" class=\"btn btn-link btn-block\">Not a member? Sign Up</a>\n    </form>\n</div>","import { AuthService } from './../../core/auth/auth.service';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Component, OnInit, ElementRef, ViewChild, AfterViewInit } from '@angular/core';\n\nimport { lowerCaseValidator } from 'src/app/shared/validators/lower-case-validator/lower-case.validator';\nimport { UserForm } from './user.form';\nimport { PlatformDetectorService } from './../../core/platform-detector/platform-detector.service';\nimport { UserService } from './../../core/user/user.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit, AfterViewInit {\n\n  error: string = '';\n  signUpForm: FormGroup;\n  @ViewChild('emailFormInput') emailFormInput: ElementRef<HTMLInputElement>;\n\n  constructor(private formBuilder: FormBuilder,\n    private platformDetectorService: PlatformDetectorService,\n    private userService: UserService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.signUpForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      userName: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(20), lowerCaseValidator]],\n      fullName: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(40)]],\n      password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(20)]]\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.platformDetectorService.isPlatformBrowser() &&\n      this.emailFormInput.nativeElement.focus();\n  }\n\n  signUp() {\n    const userForm = this.signUpForm.getRawValue() as UserForm;\n    this.userService.signUp(userForm)\n      .subscribe(_ => {\n        this.router.navigate([''])\n      },\n        err => {\n          console.log(err)\n          this.error = err.message\n        });\n  }\n\n}\n","<div class=\"container pt-5\">\n    <ol-vmessage [message]=\"error\" *ngIf=\"error\"></ol-vmessage>\n    <form [formGroup]=\"signUpForm\" class=\"form\">\n        <div class=\"form-group\">\n            <label for=\"email\">E-mail</label>\n            <input #emailFormInput type=\"email\" id=\"email\" formControlName=\"email\" class=\"form-control\"\n                placeholder=\"Email\" />\n            <ol-form-error [input]=\"signUpForm.get('email')\" inputName=\"Email\">\n            </ol-form-error>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"userName\">User name</label>\n            <input #loginFormInput id=\"userName\" formControlName=\"userName\" class=\"form-control\"\n                placeholder=\"User name\" />\n            <ol-form-error [input]=\"signUpForm.get('userName')\" inputName=\"User name\">\n            </ol-form-error>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"fullName\">Full name</label>\n            <input #loginFormInput id=\"fullName\" formControlName=\"fullName\" class=\"form-control\"\n                placeholder=\"Full name\" />\n            <ol-form-error [input]=\"signUpForm.get('fullName')\" inputName=\"Full name\">\n            </ol-form-error>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input id=\"password\" type=\"password\" formControlName=\"password\" class=\"form-control\"\n                placeholder=\"Password\" />\n            <ol-form-error [input]=\"signUpForm.get('password')\" inputName=\"Password\">\n            </ol-form-error>\n        </div>\n        <button [disabled]=\"signUpForm.invalid\" type=\"submit\" (click)=\"signUp()\" class=\"btn btn-primary btn-block\">\n            Sign Up\n        </button>\n        <a [routerLink]=\"['']\" class=\"btn btn-link btn-block\">Already a member? Sign In</a>\n    </form>\n</div>","import { AbstractControl } from '@angular/forms';\r\n\r\nexport function lowerCaseValidator(control: AbstractControl) {\r\n    if (control.value.trim() && !/^[a-z0-9_\\-]+$/.test(control.value)) {\r\n        return { lowerCase: true }\r\n    }\r\n    return null;\r\n}"]}