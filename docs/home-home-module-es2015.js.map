{"version":3,"sources":["./src/app/core/auth/auth.service.ts","./src/app/core/auth/login.guard.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/home/home.module.ts","./src/app/home/home.routing.module.ts","./src/app/home/login/login.component.ts","./src/app/home/login/login.component.html","./src/app/home/signup/signup.component.ts","./src/app/home/signup/signup.component.html","./src/app/shared/validators/lower-case-validator/lower-case.validator.ts"],"names":[],"mappings":"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","file":"home-home-module-es2015.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { tap } from 'rxjs/operators';\nimport { UserService } from '../user/user.service';\nimport { environment } from './../../../environments/environment';\n\nconst API_URL = environment.apiUrl;\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient, private userService: UserService) { }\n\n  authenticate(userName: string, password: string) {\n    return this.http.post(`${API_URL}/user/login`, {\n      userName,\n      password\n    }, { observe: 'response' })\n      .pipe(tap(\n        res => {\n          const authToken = res.headers.get('x-access-token');\n          this.userService.setToken(authToken);\n        }\n      ));\n  }\n}\n","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UserService } from '../user/user.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LoginGuard implements CanActivate {\r\n\r\n    constructor(private userService: UserService, private router: Router) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n        if (this.userService.isLogged()) {\r\n            this.router.navigate(['user', this.userService.getUsername()])\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-6 col-md-6\">\n            <img class=\"img-fluid d-none d-sm-block\" src=\"assets/img/home.jpg\" />\n        </div>\n        <div class=\"col-6 col-md-6\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>","import { HomeRoutingModule } from './home.routing.module';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { VmessageModule } from './../shared/components/vmessage/vmessage.module';\nimport { FormErrorModule } from './../shared/components/form-error/form-error.module';\nimport { HomeComponent } from './home.component';\n\n\n\n@NgModule({\n  declarations: [LoginComponent, SignupComponent, HomeComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    VmessageModule,\n    RouterModule,\n    FormErrorModule,\n    HomeRoutingModule\n  ]\n})\nexport class HomeModule { }\n","import { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HomeComponent } from './home.component';\r\nimport { LoginGuard } from './../core/auth/login.guard';\r\n\r\nimport { Routes } from '@angular/router';\r\n\r\nexport const routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: HomeComponent,\r\n        canActivate: [LoginGuard],\r\n        children: [\r\n            {\r\n                path: '', component: LoginComponent,\r\n                data: {\r\n                    title: 'Sign in'\r\n                }\r\n            },\r\n            {\r\n                path: 'signup', component: SignupComponent,\r\n                data: {\r\n                    title: 'Sign up'\r\n                }\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class HomeRoutingModule { }\r\n","import { Component, OnInit, ElementRef, ViewChild, AfterViewInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { PlatformDetectorService } from './../../core/platform-detector/platform-detector.service';\nimport { AuthService } from './../../core/auth/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, AfterViewInit {\n\n  loginForm: FormGroup;\n  erro = '';\n  @ViewChild('loginFormInput') loginFormInput: ElementRef<HTMLInputElement>;\n\n  constructor(private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private platformDetectorService: PlatformDetectorService) { }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      userName: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  ngAfterViewInit(): void {\n    this.platformDetectorService.isPlatformBrowser() &&\n      this.loginFormInput.nativeElement.focus();\n  }\n\n  login() {\n    const userName = this.loginForm.get('userName').value;\n    const password = this.loginForm.get('password').value;\n    this.authService\n      .authenticate(userName, password)\n      .subscribe(() => {\n        this.router.navigate(['user', userName]);\n      },\n        err => {\n          console.log(err);\n          this.erro = 'Usuário ou senha inválido';\n          this.platformDetectorService.isPlatformBrowser() &&\n            this.loginFormInput.nativeElement.focus();\n          this.loginForm.reset();\n        });\n  }\n\n}\n","<div class=\"container pt-5\">\n    <ol-vmessage *ngIf=\"erro.length\" [message]=\"erro\">\n    </ol-vmessage>\n    <form class=\"form\" [formGroup]=\"loginForm\" (submit)=\"login()\">\n        <div class=\"form-group\">\n            <label for=\"userName\">Username</label>\n            <input #loginFormInput id=\"userName\" formControlName=\"userName\" class=\"form-control\"\n                placeholder=\"User name\" />\n            <ol-form-error [input]=\"loginForm.get('userName')\" inputName=\"User name\">\n            </ol-form-error>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input id=\"password\" type=\"password\" formControlName=\"password\" class=\"form-control\"\n                placeholder=\"Password\" />\n            <ol-form-error [input]=\"loginForm.get('password')\" inputName=\"Password\">\n            </ol-form-error>\n        </div>\n        <button type=\"submit\" [disabled]=\"loginForm.invalid\" class=\"btn btn-primary btn-block\">Login</button>\n        <a [routerLink]=\"['signup']\" class=\"btn btn-link btn-block\">Not a member? Sign Up</a>\n    </form>\n</div>","import { AuthService } from './../../core/auth/auth.service';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Component, OnInit, ElementRef, ViewChild, AfterViewInit } from '@angular/core';\n\nimport { lowerCaseValidator } from 'src/app/shared/validators/lower-case-validator/lower-case.validator';\nimport { UserForm } from './user.form';\nimport { PlatformDetectorService } from './../../core/platform-detector/platform-detector.service';\nimport { UserService } from './../../core/user/user.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit, AfterViewInit {\n\n  error: string = '';\n  signUpForm: FormGroup;\n  @ViewChild('emailFormInput') emailFormInput: ElementRef<HTMLInputElement>;\n\n  constructor(private formBuilder: FormBuilder,\n    private platformDetectorService: PlatformDetectorService,\n    private userService: UserService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.signUpForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      userName: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(20), lowerCaseValidator]],\n      fullName: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(40)]],\n      password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(20)]]\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.platformDetectorService.isPlatformBrowser() &&\n      this.emailFormInput.nativeElement.focus();\n  }\n\n  signUp() {\n    const userForm = this.signUpForm.getRawValue() as UserForm;\n    this.userService.signUp(userForm)\n      .subscribe(_ => {\n        this.router.navigate([''])\n      },\n        err => {\n          console.log(err)\n          this.error = err.message\n        });\n  }\n\n}\n","<div class=\"container pt-5\">\n    <ol-vmessage [message]=\"error\" *ngIf=\"error\"></ol-vmessage>\n    <form [formGroup]=\"signUpForm\" class=\"form\">\n        <div class=\"form-group\">\n            <label for=\"email\">E-mail</label>\n            <input #emailFormInput type=\"email\" id=\"email\" formControlName=\"email\" class=\"form-control\"\n                placeholder=\"Email\" />\n            <ol-form-error [input]=\"signUpForm.get('email')\" inputName=\"Email\">\n            </ol-form-error>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"userName\">User name</label>\n            <input #loginFormInput id=\"userName\" formControlName=\"userName\" class=\"form-control\"\n                placeholder=\"User name\" />\n            <ol-form-error [input]=\"signUpForm.get('userName')\" inputName=\"User name\">\n            </ol-form-error>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"fullName\">Full name</label>\n            <input #loginFormInput id=\"fullName\" formControlName=\"fullName\" class=\"form-control\"\n                placeholder=\"Full name\" />\n            <ol-form-error [input]=\"signUpForm.get('fullName')\" inputName=\"Full name\">\n            </ol-form-error>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input id=\"password\" type=\"password\" formControlName=\"password\" class=\"form-control\"\n                placeholder=\"Password\" />\n            <ol-form-error [input]=\"signUpForm.get('password')\" inputName=\"Password\">\n            </ol-form-error>\n        </div>\n        <button [disabled]=\"signUpForm.invalid\" type=\"submit\" (click)=\"signUp()\" class=\"btn btn-primary btn-block\">\n            Sign Up\n        </button>\n        <a [routerLink]=\"['']\" class=\"btn btn-link btn-block\">Already a member? Sign In</a>\n    </form>\n</div>","import { AbstractControl } from '@angular/forms';\r\n\r\nexport function lowerCaseValidator(control: AbstractControl) {\r\n    if (control.value.trim() && !/^[a-z0-9_\\-]+$/.test(control.value)) {\r\n        return { lowerCase: true }\r\n    }\r\n    return null;\r\n}"],"sourceRoot":"webpack:///"}